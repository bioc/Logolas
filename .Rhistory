npos <- ncol(table_mat_norm)
if (ic.scale){
if(yscale_change){
if(max(ic)<1){ylim <- 1
facs <- ic + 1 - max(ic)}
if(max(ic)>1){ylim <- 2
facs <- ic}
}else{
ylim <- 2
facs <- ic
}
ylab <- "Information content"
}else{
ylim <- 1
ylab <- "Probability"
facs <- rep(1, npos)
}
x.pos <- 0
for (j in 1:npos){
column <- counts_mat_norm[,j]
hts <- 0.99*column*facs[j]
letterOrder <- order(hts)
y.pos <- 0
for (i in 1:length(chars)){
letter <- chars[letterOrder[i]]
col <- cols[letterOrder[i]]
ht <- hts[letterOrder[i]]
if (ht>0) letters <- addLetter(letters, letter, col, x.pos,y.pos,ht,wt[j])
y.pos <- y.pos + ht + start
}
x.pos <- x.pos + wt[j]
}
grid.newpage()
bottomMargin = ifelse(xaxis, 2 + xaxis_fontsize/3.5, 3)
leftMargin = ifelse(yaxis, 2 + y_fontsize/3.5, 3)
pushViewport(plotViewport(c(bottomMargin,leftMargin,max(xlim)+0.5,max(xlim)+0.5)))
# pushViewport(viewport(layout = grid.layout(2, 2),
#              x = bottomMargin,
#              y = leftMargin,
#              width = max(xlim/2)+0.5,
#              height = max(ylim/2)+0.5))
pushViewport(dataViewport(0:ncol(counts_mat_norm),0:ylim,name="vp1"))
grid.polygon(x=unit(letters$x,"native"), y=unit(letters$y,"native"),
id=letters$id, gp=gpar(fill=letters$fill,col="transparent"))
grid.polygon(x=unit(letters$x,"native"), y=unit(letters$y,"native"),
id=letters$id,
gp=gpar(fill=letters$fill,col="transparent"))
xlim <- cumsum(wt) - wt/2;
# xlim <- c(wt[1]/2, wt[1] + wt[2]/2, wt[1]+wt[2]+wt[3]/2, wt[1]+wt[2]+wt[3], 5.5)
low_xlim <- c(xlim - 0.5*wt, xlim[length(xlim)]+0.5*wt[length(xlim)])
ylim_scale <- seq(0, ylim, length.out=6);
ic_lim_scale <- seq(0, max(ic), length.out=6)
for(n in 1:length(xlim)){
grid.lines(x = unit(low_xlim[n], "native"),
y = unit(c(0, ylim), "native"),
gp=gpar(col="grey80"))
}
if(is.null(pop_name)){
grid.text("Damage logo plot", y = unit(1, "npc") + unit(1.5, "lines"),
gp = gpar(fontsize = 16))
}else{
grid.text(paste0("Damage logo plot for ", pop_name), y = unit(1, "npc") + unit(1.5, "lines"),
gp = gpar(fontsize = 16))
}
if (xaxis){
grid.xaxis(at=seq(0.5,ncol(counts_mat_norm)-0.5),
label=colnames(counts_mat_norm),
gp=gpar(fontsize=xaxis_fontsize))
grid.text("Position",y=unit(-3,"lines"), gp=gpar(fontsize=xaxis_fontsize))
}
if (yaxis){
if(yscale_change==TRUE){
grid.yaxis(at = ylim_scale,
label = round(ic_lim_scale,1),
gp=gpar(fontsize=y_fontsize))
}else{
grid.yaxis(gp=gpar(fontsize=y_fontsize))
}
grid.text(ylab,x=unit(-3,"lines"),rot=90,
gp=gpar(fontsize=y_fontsize))
}
popViewport()
popViewport()
par(ask=FALSE)
}
counts_mat <- rbind(c(0, 10, 100, 60, 20),
c(40, 30, 30, 35, 20),
c(100, 0, 15, 25, 75),
c(10, 30, 20, 50, 70)
)
colnames(counts_mat) <- c("2012", "2013", "2014", "2015", "2016")
rownames(counts_mat) <- c("Politics", "Science", "Religion",
"Literature")
logomaker(counts_mat,
cols= RColorBrewer::brewer.pal(dim(counts_mat)[1],name = "Spectral"),
frame_width = 2)
logomaker(counts_mat,
cols= RColorBrewer::brewer.pal(dim(counts_mat)[1],name = "Spectral"),
frame_width = 1)
rm(list=ls())
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
logomaker(counts_mat,
cols= RColorBrewer::brewer.pal(dim(counts_mat)[1],name = "Spectral"),
frame_width = 2)
seq(0.5,ncol(table_mat_norm)-0.5)
table
seq(0.5,ncol(counts_mat)-0.5)
source('~/Documents/Logolas/logomaker.R')
xlim <- cumsum(wt) - wt/2;
wt <- rep(2, dim(counts_mat)[1])
wt
xlim <- cumsum(wt) - wt/2;
xlim
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
xlim <- cumsum(wt) - wt/2;
wt <- rep(4, dim(counts_mat)[1])
xlim
xlim <- cumsum(wt) - wt/2;
xlim
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
counts_mat <- rbind(c(0, 10, 100, 60, 20),
c(40, 30, 30, 35, 20),
c(100, 0, 15, 25, 75),
c(10, 30, 20, 50, 70)
)
colnames(counts_mat) <- c("2012", "2013", "2014", "2015", "2016")
rownames(counts_mat) <- c("Kushal", "Gao", "Hussein",
"Joyce")
logomaker(counts_mat,
cols= RColorBrewer::brewer.pal(dim(counts_mat)[1],name = "Spectral"),
frame_width = 1)
logomaker(counts_mat,
cols= RColorBrewer::brewer.pal(dim(counts_mat)[1],name = "Spectral"),
frame_width = 1,
ic.scale = FALSE)
setwd("~/Documents/count-clustering/project/R")
data <- data.frame(data.table::fread("../external_data/GTEX_V6/cis_gene_expression.txt"))
dim(data)
matdata <- data[,-(1:2)]
sample_names <- read.table("../external_data/GTEX_V6/samples_id.txt")
sample_names
ba_indices <- grep("BA", sample_names[,3])
ba_indices
dim(sample_names)
ba_data <- matdata[, ba_indices]
dim(ba_data)
colnames(ba_data) <- sample_names[ba_indices,3]
ba_data[1:3, 1:3]
sample_names[ba_indices,3]
dim(ba_data)
out <- t(ba_data)
save(out, file="../external_data/GTEX_V6/ba_data_gtex.rda")
dim(out)
out[1:3, 1:3]
install.packages("aRxiv")
install.packages("devtools")
library(devtools)
install_github("ropensci/aRxiv")
arxiv_count('au:"Matthew Stephens"')
library(aRxiv)
arxiv_count('au:"Matthew Stephens"')
rec <- arxiv_search('au:"Matthew Stephens"')
rec
rec2 <- arxiv_search('au:"John Novembre"')
rec2
rec2 <- arxiv_search('au:"Dan Nicolae"')
rec2
rec2 <- arxiv_search('au:"John Lafferty"')
rec2
rec3 <- arxiv_search('au:"Wei Biao Wu"')
rec3
rec4 <- arxiv_search('au:"Peter Mccullagh"')
rec4
rec5 <- arxiv_search('au:"Michael Stein"')
rec5
rec5 <- arxiv_search('au:"Kushal Kumar Dey"')
rec5
rec1 <- arxiv_search('au:"Matthew Stephens"')
rec2 <- arxiv_search('au:"John Lafferty"')
rec3 <- arxiv_search('au:"Wei Biao Wu"')
rec4 <- arxiv_search('au:"Peter Mccullagh"')
primary_categories <- rec1$primary_category
primary_categories
toupper(primary_categories)
primary_categories_2 <- rec2$primary_category
primary_categories_3 <- rec3$primary_category
primary_categories_4 <- rec4$primary_category
toupper(primary_categories_2)
toupper(primary_categories_3)
toupper(primary_categories_4)
factor_levels <- c(unique(primary_categories_1),
unique(primary_categories_2),
unique(primary_categories_3),
unique(primary_categories_4))
primary_categories_1 <- rec1$primary_category
primary_categories_2 <- rec2$primary_category
primary_categories_3 <- rec3$primary_category
primary_categories_4 <- rec4$primary_category
factor_levels <- c(unique(primary_categories_1),
unique(primary_categories_2),
unique(primary_categories_3),
unique(primary_categories_4))
factor_levels
primary_categories_1 <- toupper(rec1$primary_category)
primary_categories_2 <- toupper(rec2$primary_category)
primary_categories_3 <- toupper(rec3$primary_category)
primary_categories_4 <- toupper(rec4$primary_category)
factor_levels <- c(unique(primary_categories_1),
unique(primary_categories_2),
unique(primary_categories_3),
unique(primary_categories_4))
factor_levels
source('~/Documents/Logolas/dotletter.R')
source('~/Documents/Logolas/dotletter.R')
source('~/Documents/Logolas/dotletter.R')
source('~/Documents/Logolas/dotletter.R')
source('~/Documents/Logolas/dotletter.R')
source('~/Documents/Logolas/dotletter.R')
source('~/Documents/Logolas/dashletter.R')
source('~/Documents/Logolas/dashletter.R')
source('~/Documents/Logolas/rightarrowletter.R')
source('~/Documents/Logolas/rightarrowletter.R')
source('~/Documents/Logolas/rightarrowletter.R')
source('~/Documents/Logolas/rightarrowletter.R')
source('~/Documents/Logolas/rightarrowletter.R')
source('~/Documents/Logolas/leftarrowletter.R')
source('~/Documents/Logolas/leftarrowletter.R')
source('~/Documents/Logolas/leftarrowletter.R')
primary_categories_1 <- factor(primary_categories_1)
primary_categories_1
tabe(primary_categories_1)
table(primary_categories_1)
primary_categories_1 <- factor(primary_categories_1, levels=factor_levels)
factor_levels <- unique(c(unique(primary_categories_1),
unique(primary_categories_2),
unique(primary_categories_3),
unique(primary_categories_4)))
primary_categories_1 <- factor(primary_categories_1, levels=factor_levels)
primary_categories_1 <- toupper(rec1$primary_category)
primary_categories_2 <- toupper(rec2$primary_category)
primary_categories_3 <- toupper(rec3$primary_category)
primary_categories_4 <- toupper(rec4$primary_category)
factor_levels <- unique(c(unique(primary_categories_1),
unique(primary_categories_2),
unique(primary_categories_3),
unique(primary_categories_4)))
factor_levels
primary_categories_1 <- factor(primary_categories_1, levels=factor_levels)
primary_categories_1
primary_categories_1 <- factor(primary_categories_1, levels=factor_levels)
primary_categories_2 <- factor(primary_categories_2, levels=factor_levels)
primary_categories_3 <- factor(primary_categories_3, levels=factor_levels)
primary_categories_4 <- factor(primary_categories_4, levels=factor_levels)
table(primary_categories_1)
table(primary_categories_2)
table(primary_categories_3)
table(primary_categories_4)
tab_data <- rbind(table(primary_categories_1),
table(primary_categories_2),
table(primary_categories_3),
table(primary_categories_4))
dim(tab_data)
tab_data
tab_data <- cbind(table(primary_categories_1),
table(primary_categories_2),
table(primary_categories_3),
table(primary_categories_4))
tab_data
colnames(tab_data) <- c("Matthew Stephens",
"John Lafferty",
"Wei Biao Wu",
"Peter McCullagh")
tab_data
colSums(tab_data)
toupper(rec1$primary_category)
toupper(rec2$primary_category)
toupper(rec3$primary_category)
toupper(rec4$primary_category)
rec4 <- arxiv_search('au:"Peter Mccullagh"')
rec4
rec1 <- arxiv_search('au:"Matthew Stephens"')
rec1
rec1 <- arxiv_search('au:"Peter Hall"')
rec1
rec1 <- arxiv_search('au:"Matthew Stephens"', limit=50)
rec2 <- arxiv_search('au:"John Lafferty"', limit=50)
rec3 <- arxiv_search('au:"Wei Biao Wu"', limit=50)
rec4 <- arxiv_search('au:"Peter Mccullagh"', limit=50)
primary_categories_1 <- toupper(rec1$primary_category)
primary_categories_2 <- toupper(rec2$primary_category)
primary_categories_3 <- toupper(rec3$primary_category)
primary_categories_4 <- toupper(rec4$primary_category)
factor_levels <- unique(c(unique(primary_categories_1),
unique(primary_categories_2),
unique(primary_categories_3),
unique(primary_categories_4)))
primary_categories_1 <- factor(primary_categories_1, levels=factor_levels)
primary_categories_2 <- factor(primary_categories_2, levels=factor_levels)
primary_categories_3 <- factor(primary_categories_3, levels=factor_levels)
primary_categories_4 <- factor(primary_categories_4, levels=factor_levels)
tab_data <- cbind(table(primary_categories_1),
table(primary_categories_2),
table(primary_categories_3),
table(primary_categories_4))
colnames(tab_data) <- c("Matthew Stephens",
"John Lafferty",
"Wei Biao Wu",
"Peter McCullagh")
tab_data
name <- Q-BIO.QM
name <- "Q-BIO.QM"
chars <- paste0(strsplit(name, "")[[1]], "letter")
xpool <- numeric()
ypool <- numeric()
idpool <- numeric()
fillpool <- numeric()
chars
split_string <- strsplit(name, "")[[1]]
split_string
split_string[grep("-", split_string)] <- "dash"
split_string
split_string[grep("-", split_string)] <- "dash"
split_string[grep(".", split_string)] <- "dot"
split_string[grep(">", split_string)] <- "rightarrow"
split_string[grep("<", split_string)] <- "leftarrow"
split_string
split_string <- strsplit(name, "")[[1]]
split_string[grep("-", split_string)] <- "dash"
split_string[grep("[.]", split_string)] <- "dot"
split_string[grep(">", split_string)] <- "rightarrow"
split_string[grep("<", split_string)] <- "leftarrow"
split_string
split_string <- strsplit(name, "")[[1]]
split_string[grep("[-]", split_string)] <- "dash"
split_string[grep("[.]", split_string)] <- "dot"
split_string[grep("[>]", split_string)] <- "rightarrow"
split_string[grep("[<]", split_string)] <- "leftarrow"
split_string
source('~/Documents/Logolas/makemylogo.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/makemylogo.R')
source('~/Documents/Logolas/logomaker.R')
setwd("~/Documents/Logolas")
source('~/Documents/Logolas/logomaker.R')
logomaker(tab_data,
cols= RColorBrewer::brewer.pal(dim(tab_data)[1],name = "Spectral"),
frame_width = 1,
ic.scale = TRUE)
logomaker(counts_mat,
cols= RColorBrewer::brewer.pal(dim(counts_mat)[1],name = "Spectral"),
frame_width = 1,
ic.scale = FALSE)
tab_data
tab_data <- as.matrix(tab_data)
logomaker(tab_data,
cols= RColorBrewer::brewer.pal(dim(tab_data)[1],name = "Spectral"),
frame_width = 1,
ic.scale = TRUE)
makemylogo("Q-BIO.QM")
name <- "Q-BIO.QM"
split_string <- strsplit(name, "")[[1]]
split_string[grep("[-]", split_string)] <- "dash"
split_string[grep("[.]", split_string)] <- "dot"
split_string[grep("[>]", split_string)] <- "rightarrow"
split_string[grep("[<]", split_string)] <- "leftarrow"
split_string
chars <- paste0(split_string, "letter")
xpool <- numeric()
ypool <- numeric()
idpool <- numeric()
fillpool <- numeric()
chars
library(grid)
files <- list.files(pattern="letter")
sapply(list.files(pattern="letter", full.names = TRUE), source)
split_string <- strsplit(name, "")[[1]]
split_string[grep("[-]", split_string)] <- "dash"
split_string[grep("[.]", split_string)] <- "dot"
split_string[grep("[>]", split_string)] <- "rightarrow"
split_string[grep("[<]", split_string)] <- "leftarrow"
chars <- paste0(split_string, "letter")
xpool <- numeric()
ypool <- numeric()
idpool <- numeric()
fillpool <- numeric()
chars
m <- 2
fun <- get(chars[m])
fun
out <- fun(colfill=colfill)
colfill <- "orange"
out <- fun(colfill=colfill)
xpool <- c(xpool, (m-1)*(1/length(chars)) + (1/length(chars))*out$x);
xpool
m <- 1
chars <- paste0(split_string, "letter")
xpool <- numeric()
ypool <- numeric()
idpool <- numeric()
fillpool <- numeric()
counter <- 0
fun <- get(chars[m])
out <- fun(colfill=colfill)
xpool <- c(xpool, (m-1)*(1/length(chars)) + (1/length(chars))*out$x);
ypool <- c(ypool, out$y)
idpool <- c(idpool, out$id + counter)
fillpool <- c(fillpool, out$fill)
counter <- counter + max(out$id);
m <- 2
fun <- get(chars[m])
out <- fun(colfill=colfill)
xpool <- c(xpool, (m-1)*(1/length(chars)) + (1/length(chars))*out$x);
ypool <- c(ypool, out$y)
idpool <- c(idpool, out$id + counter)
fillpool <- c(fillpool, out$fill)
counter <- counter + max(out$id);
m <- 3
fun <- get(chars[m])
out <- fun(colfill=colfill)
xpool <- c(xpool, (m-1)*(1/length(chars)) + (1/length(chars))*out$x);
ypool <- c(ypool, out$y)
idpool <- c(idpool, out$id + counter)
fillpool <- c(fillpool, out$fill)
counter <- counter + max(out$id);
counter <- 0
for(m in 1:length(chars)){
fun <- get(chars[m])
out <- fun(colfill=colfill)
xpool <- c(xpool, (m-1)*(1/length(chars)) + (1/length(chars))*out$x);
ypool <- c(ypool, out$y)
idpool <- c(idpool, out$id + counter)
fillpool <- c(fillpool, out$fill)
counter <- counter + max(out$id);
}
m
chars
fun <- get(chars[m])
out <- fun(colfill=colfill)
xpool <- c(xpool, (m-1)*(1/length(chars)) + (1/length(chars))*out$x);
out$x
source('~/Documents/Logolas/dotletter.R')
source('~/Documents/Logolas/makemylogo.R')
source('~/Documents/Logolas/dotletter.R')
source('~/Documents/Logolas/makemylogo.R')
logomaker(tab_data,
cols= RColorBrewer::brewer.pal(dim(tab_data)[1],name = "Spectral"),
frame_width = 1,
ic.scale = TRUE)
tab_data
source('~/Documents/Logolas/colonletter.R')
source('~/Documents/Logolas/colonletter.R')
source('~/Documents/Logolas/semicolonletter.R')
source('~/Documents/Logolas/semicolonletter.R')
source('~/Documents/Logolas/semicolonletter.R')
source('~/Documents/Logolas/semicolonletter.R')
source('~/Documents/Logolas/commaletter.R')
source('~/Documents/Logolas/makemylogo.R')
source('~/Documents/Logolas/semicolonletter.R')
source('~/Documents/Logolas/semicolonletter.R')
source('~/Documents/Logolas/makemylogo.R')
source('~/Documents/Logolas/makemylogo.R')
source('~/Documents/Logolas/Qletter.R')
source('~/Documents/Logolas/Oletter.R')
source('~/Documents/Logolas/makemylogo.R')
source('~/Documents/Logolas/arXiv_test.R')
install.packages("devtools")
install.packages("aRxiv")
install.packages("aRxiv")
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/arXiv_test.R')
logomaker(tab_data,
cols= RColorBrewer::brewer.pal(dim(tab_data)[1],name = "Spectral"),
frame_width = 1,
ic.scale = TRUE,
pop_name = "arXiv field categories of Uchicago professors")
logomaker(tab_data,
cols= RColorBrewer::brewer.pal(dim(tab_data)[1],name = "Spectral"),
frame_width = 1,
ic.scale = TRUE,
pop_name = "arXiv field categories of UChicago STAT professors")
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/arXiv_test.R')
source('~/Documents/Logolas/arXiv_test.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/arXiv_test.R')
source('~/Documents/Logolas/logomaker.R')
source('~/Documents/Logolas/arXiv_test.R')
