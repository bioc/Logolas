species_names <- rownames(theta)
families <- unlist(lapply(species_names, function(x) return(strsplit(x, "[_]")[[1]][1])))
signature_prob <- matrix(0, length(unique(families)), dim(theta)[2])
for(l in 1:dim(theta)[2]){
signature_prob[,l] <- tapply(theta[,l], factor(families), sum)
}
colSums(signature_prob)
signature_prob[signature_prob < 0.01] = 0
signature_prob <- apply(signature_prob, 2, function(x) return(x/sum(x)))
rownames(signature_prob) <- levels(factor(families))
colnames(signature_prob) <- c("Cluster 1", "Cluster 2")
save(signature_prob, file="../../data/himalayan_fauna_2_clusters.rda")
get(load("../data/MouseDeng2014.FitGoM.rda"))
setwd("~/Documents/Logolas/vignettes/test")
get(load("../data/MouseDeng2014.FitGoM.rda"))
get(load("../../data/MouseDeng2014.FitGoM.rda"))
dat <- get(load("../../data/himalayan_fauna_3_clusters.rda"))
devtools::use_data(dat, overwrite=TRUE)
himalayan_fauna_3_clusters <- get(load("../../data/himalayan_fauna_3_clusters.rda"))
devtools::use_data(himalayan_fauna_3_clusters, overwrite=TRUE)
himalayan_fauna_2_clusters <- get(load("../../data/himalayan_fauna_2_clusters.rda"))
devtools::use_data(himalayan_fauna_2_clusters, overwrite=TRUE)
devtools::document()
devtools::document()
library(Logolas)
setwd("~/Documents/Logolas/vignettes/test")
himalayan_fauna_3_clusters <- get(load("../../data/himalayan_fauna_3_clusters.rda"))
devtools::use_data(himalayan_fauna_3_clusters, overwrite=TRUE)
himalayan_fauna_2_clusters <- get(load("../../data/himalayan_fauna_2_clusters.rda"))
devtools::use_data(himalayan_fauna_2_clusters, overwrite=TRUE)
data("himalayan_fauna_2_clusters")
himalayan_fauna_2_clusters
data("himalayan_fauna_3_clusters")
himalayan_fauna_3_clusters
devtools::document()
data("himalayan_fauna_3_clusters")
devtools::document()
devtools::document()
data("himalayan_fauna_2_clusters")
data("himalayan_fauna_3_clusters")
library(Logolas)
rm(list=ls())
library(Logolas)
counts_mat <- rbind(c(0, 10, 100, 60, 20),
c(40, 30, 30, 35, 20),
c(100, 0, 15, 25, 75),
c(10, 30, 20, 50, 70)
)
source('~/Documents/Logolas/R/ic_computer.R')
colnames(counts_mat) <- c("2012", "2013", "2014", "2015", "2016")
rownames(counts_mat) <- c("Person1", "Person2", "Person3",
"Person4")
ic_computer(counts_mat, alpha=2)
colnames(counts_mat) <- c("2012", "2013", "2014", "2015", "2016")
rownames(counts_mat) <- c("Person1", "Person2", "Person3",
"Person4")
ic_computer(counts_mat, alpha=1)
source('~/Documents/Logolas/R/ic_computer.R')
ic_computer(counts_mat, alpha=2)
ic_computer(counts_mat, alpha=1)
ic_computer(counts_mat, alpha=10)
devtools::document()
library(Logolas)
library(Logolas)
devtools::document()
library(Logolas)
library(seqLogo)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- makePWM(m)
seqLogo(p)
m
rownames(m) <- c("A", "C", "G", "T")
colnames(m) <- 1:8
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position")
rownames(m) <- c("A", "C", "G", "T")
colnames(m) <- 1:8
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position")
library(seqLogo)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- makePWM(m)
seqLogo(p)
rownames(m) <- c("A", "C", "G", "T")
colnames(m) <- 1:8
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position")
source('~/Documents/Logolas/R/logomaker.R')
rownames(m) <- c("A", "C", "G", "T")
colnames(m) <- 1:8
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = FALSE,
alpha = 2,
xlab="position",
col_line_split = "grey80")
source('~/Documents/Logolas/R/logomaker.R')
rownames(m) <- c("A", "C", "G", "T")
colnames(m) <- 1:8
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = FALSE,
alpha = 2,
xlab="position",
col_line_split = "grey80")
devtools::document()
library(Logolas)
rm(list=ls())
library(Logolas)
ic_computer(m alpha=3)
ic_computer(m, alpha=3)
data("himalayan_fauna_3_clusters")
data("himalayan_fauna_3_clusters")
logomaker(himalayan_fauna_3_clusters,
cols= sample(RColorBrewer::brewer.pal(10,name = "Spectral"),
dim(signature_prob)[1], replace=TRUE),
frame_width = 1,
ic.scale = TRUE,
pop_name = "Bird family abundance across clusters",
xlab = "Clusters",
ylab = "Information content")
data("himalayan_fauna_3_clusters")
logomaker(himalayan_fauna_3_clusters,
cols= sample(RColorBrewer::brewer.pal(10,name = "Spectral"),
dim(himalayan_fauna_3_clusters)[1], replace=TRUE),
frame_width = 1,
ic.scale = TRUE,
pop_name = "Bird family abundance across clusters",
xlab = "Clusters",
ylab = "Information content")
library(aRxiv)
rec1 <- arxiv_search('au:"Matthew Stephens"', limit=50)
library(aRxiv)
rec1 <- arxiv_search('au:"Matthew Stephens"', limit=50)
rec2 <- arxiv_search('au:"John Lafferty"', limit=50)
rec3 <- arxiv_search('au:"Wei Biao Wu"', limit=50)
rec4 <- arxiv_search('au:"Peter Mccullagh"', limit=50)
library(aRxiv)
rec1 <- arxiv_search('au:"Matthew Stephens"', limit=50)
citation("RWeblogo")
install.packages("RWeblogo")
install.packages("RWebLogo")
citation("RWeblogo")
library(RWebLogo)
citation("RWeblogo")
citation("RWebLogo")
source("https://bioconductor.org/biocLite.R")
biocLite("motifStack")
citation("motifStack")
devtools::document()
BiocCheck::BiocCheck("../../../Logolas/")
devtools::document()
BiocCheck::BiocCheck("../../../Logolas/")
BiocCheck::BiocCheck("../../../Logolas/")
BiocCheck::BiocCheck("../../../Logolas/")
BiocCheck::BiocCheck("../../../Logolas/")
devtools::document()
library(Logolas)
BiocCheck::BiocCheck("../../../Logolas/")
BiocCheck::BiocCheck("../../../Logolas/")
BiocCheck::BiocCheck("../../../Logolas/")
p <- makePWM(m)
library(seqLogo)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- makePWM(m)
p
p
p[[1]]
p@pwm[,c(3,4)]
p[,c(3,4)]
p
class(p)
matrix(p)
as.matrix(p)
p[[1]]
slot(p,name = "pwm")
library(seqLogo)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- makePWM(m)
pwm_mat <- slot(p,name = "pwm")
mat1 <- cbind(pwm_mat[,c(3,4)], rep(0,4), pwm_mat[,c(5,6)]);
colnames(mat1) <- c("-2", "-1", "0", "1", "2")
mat2 <- cbind(rep(0,6), rep(0,6),
c(0.5, 0.2, 0.2, 0.05, 0.05, 0),
rep(0,6), rep(0,6))
rownames(mat2) <- c("C>T", "C>A", "C>G",
"T>A", "T>C", "T>G")
table <- rbind(mat1, mat2)
table
library(Logolas)
library(Logolas)
biocValid()
library(BiocInstaller)
biocLite()
source("https://bioconductor.org/biocLite.R")
biocLite()
source("https://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
Run the command
remove.packages("BiocInstaller")
remove.packages("BiocInstaller")
remove.packages("BiocInstaller")
source("https://bioconductor.org/biocLite.R")
biocValid()
source("https://bioconductor.org/biocLite.R")
biocLite("BiocInstaller")
library(Logolas)
library(Logolas)
BiocCheck::BiocCheck("../Logolas/")
library(Logolas)
library(Logolas)
devtools::install_github("hadley/pkgdown")
library(pkgdown)
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(Logolas)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(Logolas)
devtools::document()
library(Logolas)
library(Logolas)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- seqLogo::makePWM(m)
seqLogo::seqLogo(p)
rownames(m) <- c("A", "C", "G", "T")
colnames(m) <- 1:8
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position",
col_line_split = "grey80")
m
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position",
col_line_split = "grey80")
Logolas::logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position",
col_line_split = "grey80")
source('~/Documents/Logolas/R/logomaker.R')
devtools::document()
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position",
col_line_split = "grey80")
source('~/Documents/Logolas/R/logomaker.R')
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position",
col_line_split = "grey80")
source('~/Documents/Logolas/R/logomaker.R')
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position",
col_line_split = "grey80")
library(gris)
library(grid)
source('~/Documents/Logolas/R/logomaker.R')
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position",
col_line_split = "grey80")
library(RColorBrewer)
cols = RColorBrewer::brewer.pal(dim(m)[1], name = "Spectral"
)
cols
m
source('~/Documents/Logolas/R/logomaker.R')
source('~/Documents/Logolas/R/logomaker.R')
devtools::document()
source('~/Documents/Logolas/R/logomaker.R')
library(Logolas)
rm(list=ls())
library(Logolas)
source('~/Documents/Logolas/R/logomaker.R')
library(Logolas)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- seqLogo::makePWM(m)
seqLogo::seqLogo(p)
rownames(m) <- c("A", "C", "G", "T")
colnames(m) <- 1:8
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position",
col_line_split = "grey80")
source('~/Documents/Logolas/R/logomaker.R')
rownames(m) <- c("A", "C", "G", "T")
colnames(m) <- 1:8
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position",
col_line_split = "grey80")
devtools::document()
ic_computer(m, alpha=3)
rownames(m) <- c("A", "C", "G", "T")
colnames(m) <- 1:8
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
alpha = 2,
yscale_change=TRUE,
xlab="position",
col_line_split = "grey80")
rownames(m) <- c("A", "C", "G", "T")
colnames(m) <- 1:8
logomaker(m,
cols= RColorBrewer::brewer.pal(dim(m)[1],name ="Spectral"),
frame_width = 1,
ic.scale = FALSE,
alpha = 2,
xlab="position",
col_line_split = "grey80",
ylab = "Probability")
counts_mat <- rbind(c(0, 0, 100, 1, 2), c(4, 3, 30, 35, 2),
c(100, 0, 10, 2, 7),rep(0,5),
c(4, 2, 3, 7, 70), c(1, 8, 0, 60, 3),
rep(0, 5), c(4, 2, 100, 1, 1),
c(12, 8, 16, 7, 20), c(55, 0, 1, 0, 12),
rep(0,5), c(rep(0,3), 20, 0),
rep(0,5), c(0, 0, 30, 0, 22),
c(1, 0, 12, 3, 10), rep(0,5),
c(0, 1, 0, 34, 1), c(0, 1, 12, 35, 1),
c(0, 30, 1, 10, 2), c(0, 1, 4, 100, 2))
rownames(counts_mat) <- c("A", "R", "N", "D","C", "E", "Q", "G",
"H", "I", "L", "K", "M", "F", "P", "S",
"T", "W", "Y", "V")
colnames(counts_mat) <- c("Pos 1", "Pos 2", "Pos 3", "Pos 4", "Pos 5")
cols1 <- c(rev(RColorBrewer::brewer.pal(12, "Paired"))[c(3,4,7,8,11,12,5,6,9,10)],
RColorBrewer::brewer.pal(12, "Set3")[c(1,2,5,8,9)],
RColorBrewer::brewer.pal(9, "Set1")[c(9,7)],
RColorBrewer::brewer.pal(8, "Dark2")[c(3,4,8)])
logomaker(counts_mat,
cols= cols1,
frame_width = 1,
ic.scale  = FALSE,
yscale_change = FALSE)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- seqLogo::makePWM(m)
pwm_mat <- slot(p,name = "pwm")
mat1 <- cbind(pwm_mat[,c(3,4)], rep(0,4), pwm_mat[,c(5,6)]);
colnames(mat1) <- c("-2", "-1", "0", "1", "2")
mat2 <- cbind(rep(0,6), rep(0,6),
c(0.5, 0.2, 0.2, 0.05, 0.05, 0),
rep(0,6), rep(0,6))
rownames(mat2) <- c("C>T", "C>A", "C>G",
"T>A", "T>C", "T>G")
table <- rbind(mat1, mat2)
logomaker(table,
cols= rev(RColorBrewer::brewer.pal(dim(table)[1],
name = "Spectral")),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab = "Position",
ylab = "Information content")
mat <- rbind(c(326, 296, 81, 245, 71),
c(258, 228, 55, 273, 90),
c(145, 121, 29, 253, 85),
c(60, 52, 23, 180, 53),
c(150, 191, 63, 178, 63))
rownames(mat) <- c("H3K4ME1", "H3K4ME2", "H3K4ME3", "H3AC", "H4AC")
colnames(mat) <- c("Intergenic","Intron","Exon \n 1000 KB window",
"Gene start \n 1000 KB window","Gene end \n 1000 KB window")
logomaker(mat,
cols= sample(RColorBrewer::brewer.pal(10,name = "Spectral"), dim(mat)[1]),
frame_width = 1,
ic.scale = TRUE,
pop_name = "Histone marks in various genomic regions",
xlab = "",
ylab = "Information content",
yscale_change = TRUE,
col_line_split = "black")
set.seed(100)
data("himalayan_fauna_3_clusters")
logomaker(himalayan_fauna_3_clusters,
cols= sample(RColorBrewer::brewer.pal(10,name = "Spectral"),
dim(himalayan_fauna_3_clusters)[1], replace=TRUE),
frame_width = 1,
ic.scale = TRUE,
pop_name = "Bird family abundance across clusters",
xlab = "Clusters",
ylab = "Information content")
library(aRxiv)
rec1 <- arxiv_search('au:"Matthew Stephens"', limit=50)
rec2 <- arxiv_search('au:"John Lafferty"', limit=50)
rec3 <- arxiv_search('au:"Wei Biao Wu"', limit=50)
rec4 <- arxiv_search('au:"Peter Mccullagh"', limit=50)
primary_categories_1 <- toupper(rec1$primary_category)
primary_categories_2 <- toupper(rec2$primary_category)
primary_categories_3 <- toupper(rec3$primary_category)
primary_categories_4 <- toupper(rec4$primary_category)
factor_levels <- unique(c(unique(primary_categories_1),
unique(primary_categories_2),
unique(primary_categories_3),
unique(primary_categories_4)))
primary_categories_1 <- factor(primary_categories_1, levels=factor_levels)
primary_categories_2 <- factor(primary_categories_2, levels=factor_levels)
primary_categories_3 <- factor(primary_categories_3, levels=factor_levels)
primary_categories_4 <- factor(primary_categories_4, levels=factor_levels)
tab_data <- cbind(table(primary_categories_1),
table(primary_categories_2),
table(primary_categories_3),
table(primary_categories_4))
colnames(tab_data) <- c("Matthew Stephens",
"John Lafferty",
"Wei Biao Wu",
"Peter McCullagh")
tab_data <- as.matrix(tab_data)
logomaker(tab_data,
cols= RColorBrewer::brewer.pal(dim(tab_data)[1],
name = "Spectral"),
frame_width = 1,
ic.scale = TRUE,
pop_name = "arXiv field categories of UChicago STAT professors",
xlab = "Professors",
ylab = "Information content")
LAMBDAletter <- function(colfill="green"){
x <- c(0.15, 0.5, 0.85, 0.75, 0.5, 0.25)
y <- c(0, 1, 0, 0, 0.8, 0)
fill <- colfill
id <- rep(1, length(x))
ll <- list("x"= x,
"y"= y,
"id" = id,
"fill" = fill)
return(ll)
}
lambda <- LAMBDAletter()
grid::grid.newpage()
grid::pushViewport(grid::viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid::grid.polygon(lambda$x, lambda$y,
default.unit="native",
id=lambda$id,
gp=grid::gpar(fill=lambda$fill,
lwd=10))
counts_mat <- rbind(c(0, 10, 100, 60, 20),
c(40, 30, 30, 35, 20),
c(100, 0, 15, 25, 75),
c(10, 30, 20, 50, 70)
)
colnames(counts_mat) <- c("Pos 1", "Pos 2", "Pos 3", "Pos 4", "Pos 5")
rownames(counts_mat) <- c("R/LAMBDA/Q", "A", "X", "Y")
logomaker(counts_mat,
cols= RColorBrewer::brewer.pal(dim(counts_mat)[1],
name = "Spectral"),
frame_width = 1,
addlogos="LAMBDA",
addlogos_text="LAMBDA")
devtools::document()
library(Logolas)
devtools::document()
