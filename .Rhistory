c(0.5, 0.2, 0.2, 0.05, 0.05, 0),
rep(0,6), rep(0,6))
rownames(mat2) <- c("C>T", "C>A", "C>G",
"T>A", "T>C", "T>G")
table <- rbind(mat1, mat2)
logomaker(table,
cols= RColorBrewer::brewer.pal(dim(table)[1],
name = "Spectral"),
frame_width = 1,
ic.scale = TRUE,
xlab = "Position",
ylab = "Information content")
logomaker(table,
cols= rev(RColorBrewer::brewer.pal(dim(table)[1]),
name = "Spectral"),
frame_width = 1,
ic.scale = TRUE,
xlab = "Position",
ylab = "Information content")
logomaker(table,
cols= rev(RColorBrewer::brewer.pal(dim(table)[1],
name = "Spectral")),
frame_width = 1,
ic.scale = TRUE,
xlab = "Position",
ylab = "Information content")
table
devtools::document()
devtools::document()
library(seqLogo)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- makePWM(m)
seqLogo(p)
p
logomaker(p,
cols= RColorBrewer::brewer.pal(dim(p)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = FALSE)
p
class(p)
as.matrix(p)
m
p
mat <- m
rownames(mat) <- c("A", "C", "G", "T")
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = FALSE)
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = FALSE,
yscale_change=FALSE)
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE)
seqLogo(p)
mat <- m
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- 1:8
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position")
seqLogo(p)
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = FALSE,
yscale_change=FALSE,
xlab="position")
p
class(p)
counts_mat <- rbind(c(0, 0, 100, 1, 2),
c(4, 3, 30, 35, 2),
c(100, 0, 10, 2, 7),
rep(0,5),
c(4, 2, 3, 7, 70),
c(1, 8, 0, 60, 3),
rep(0, 5),
c(4, 2, 100, 1, 1),
c(12, 8, 16, 7, 20),
c(55, 0, 1, 0, 12),
rep(0,5),
c(rep(0,3), 20, 0),
rep(0,5),
c(0, 0, 30, 0, 22),
c(1, 0, 12, 3, 10),
rep(0,5),
c(0, 1, 0, 34, 1),
c(0, 1, 12, 35, 1),
c(0, 30, 1, 10, 2),
c(0, 1, 4, 100, 2))
rownames(counts_mat) <- c("A", "R", "N", "D",
"C", "E", "Q", "G",
"H", "I", "L", "K",
"M", "F", "P", "S",
"T", "W", "Y", "V")
colnames(counts_mat) <- c("Pos 1", "Pos 2", "Pos 3", "Pos 4", "Pos 5")
cols1 <- c(rev(RColorBrewer::brewer.pal(12, "Paired"))[c(3,4,7,8,11,12,5,6,9,10)],
RColorBrewer::brewer.pal(12, "Set3")[c(1,2,5,8,9)],
RColorBrewer::brewer.pal(9, "Set1")[c(9,7)],
RColorBrewer::brewer.pal(8, "Dark2")[c(3,4,8)])
logomaker(counts_mat,
cols= cols1,
frame_width = 1,
ic.scale  = FALSE,
yscale_change = FALSE)
library(seqLogo)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- makePWM(m)
mat1 <- cbind(p@pwm[,c(3,4)], rep(0,4), p@pwm[,c(5,6)]);
colnames(mat1) <- c("-2", "-1", "0", "1", "2")
mat2 <- cbind(rep(0,6), rep(0,6),
c(0.5, 0.2, 0.2, 0.05, 0.05, 0),
rep(0,6), rep(0,6))
rownames(mat2) <- c("C>T", "C>A", "C>G",
"T>A", "T>C", "T>G")
table <- rbind(mat1, mat2)
logomaker(table,
cols= rev(RColorBrewer::brewer.pal(dim(table)[1],
name = "Spectral")),
frame_width = 1,
ic.scale = TRUE,
xlab = "Position",
ylab = "Information content")
logomaker(table,
cols= rev(RColorBrewer::brewer.pal(dim(table)[1],
name = "Spectral")),
frame_width = 1,
ic.scale = TRUE,
xlab = "Position",
ylab = "Information content")
LAMBDAletter <- function(colfill="green"){
x <- c(0.15, 0.5, 0.85, 0.75, 0.5, 0.25)
y <- c(0, 1, 0, 0, 0.8, 0)
fill <- colfill
id <- rep(1, length(x))
ll <- list("x"= x,
"y"= y,
"id" = id,
"fill" = fill)
return(ll)
}
lambda <- LAMBDAletter()
grid::grid.newpage()
grid::pushViewport(grid::viewport(x=0.5,y=0.5,width=1, height=1,
clip=TRUE))
grid::grid.polygon(lambda$x, lambda$y,
default.unit="native",
id=lambda$id,
gp=grid::gpar(fill=lambda$fill,
lwd=10))
makemylogo("AC>EF/LAMBDA/W35",
addlogos="LAMBDA",
addlogos_text="LAMBDA",
plot=TRUE)
counts_mat <- rbind(c(0, 10, 100, 60, 20),
c(40, 30, 30, 35, 20),
c(100, 0, 15, 25, 75),
c(10, 30, 20, 50, 70)
)
colnames(counts_mat) <- c("Pos 1", "Pos 2", "Pos 3", "Pos 4", "Pos 5")
rownames(counts_mat) <- c("R/LAMBDA/Q", "A", "X", "Y")
counts_mat
logomaker(counts_mat,
cols= RColorBrewer::brewer.pal(dim(counts_mat)[1],
name = "Spectral"),
frame_width = 1,
addlogos="LAMBDA",
addlogos_text="LAMBDA")
source('~/Documents/Logolas/R/logomaker.R')
library(seqLogo)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- makePWM(m)
seqLogo(p)
mat <- m
rownames(mat) <- c("A", "C", "G", "T")
colnames(mat) <- 1:8
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
source('~/Documents/Logolas/R/logomaker.R')
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
source('~/Documents/Logolas/R/logomaker.R')
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
source('~/Documents/Logolas/R/logomaker.R')
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
table <- counts_mat
table
table <- mat
table_mat_norm <-  apply(table, 2, function(x) return(x/sum(x)))
npos <- ncol(table_mat_norm)
chars <- as.character(rownames(table_mat_norm))
ic <- ic_computer(table_mat_norm)
ic
max(ic)
ylim <- 2
facs <- ic
ylim
ic.scale <- TRUE
yscale_change <- TRUE
if (ic.scale){
if(yscale_change){
if(max(ic)<1){ylim <- 1
facs <- ic + 1 - max(ic)}
if(max(ic)>1){ylim <- 2
facs <- ic}
}else{
ylim <- 2
facs <- ic
}
ylab <- ylab
}else{
ylim <- 1
ylab <- "Probability"
facs <- rep(1, npos)
}
ylim
facs
ic_lim_scale
ic_lim_scale <- seq(0, max(ic), length.out=6)
ic_lim_scale
facs
j <- 1
column <- table_mat_norm[,j]
hts <- as.numeric(0.99*column*facs[j])
letterOrder <- order(hts)
hts
facs
column
sum(hts)
y.pos <- 0
for (i in 1:length(chars)){
letter <- chars[letterOrder[i]]
col <- cols[letterOrder[i]]
ht <- hts[letterOrder[i]]
if(length(intersect(letterOrder[i], slash_inds))!=0){
if (ht>0) letters <- addLetter(letters,letter, col, x.pos, y.pos, ht, wt[j], addlogos = addlogos, addlogos_text = addlogos_text)
}else{
if (ht>0) letters <- addLetter(letters,letter, col, x.pos, y.pos, ht, wt[j], addlogos = NULL, addlogos_text = NULL)
}
y.pos <- y.pos + ht + start
}
x.pos <- x.pos + wt[j]
y.pos
x.pos
letters
letters$y
max(letters$y)
xlim <- cumsum(wt) - wt/2;
# xlim <- c(wt[1]/2, wt[1] + wt[2]/2, wt[1]+wt[2]+wt[3]/2, wt[1]+wt[2]+wt[3], 5.5)
low_xlim <- c(xlim - 0.5*wt, xlim[length(xlim)]+0.5*wt[length(xlim)])
ylim_scale <- seq(0, ylim, length.out=6);
ic_lim_scale <- seq(0, max(ic), length.out=6)
ylim_scale
source('~/Documents/Logolas/R/logomaker.R')
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
source('~/Documents/Logolas/R/logomaker.R')
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
source('~/Documents/Logolas/R/logomaker.R')
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
letters$x
letters$y
letters
ylim_scale
ic_lim_scale
source('~/Documents/Logolas/R/logomaker.R')
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
source('~/Documents/Logolas/R/logomaker.R')
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
source('~/Documents/Logolas/R/logomaker.R')
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
source('~/Documents/Logolas/R/logomaker.R')
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
ic
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab="position")
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = FALSE,
yscale_change=FALSE,
xlab="position")
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = FALSE,
yscale_change=TRUE,
xlab="position")
logomaker(mat,
cols= RColorBrewer::brewer.pal(dim(mat)[1],
name ="Spectral"),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab="position")
library(seqLogo)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- makePWM(m)
mat1 <- cbind(p@pwm[,c(3,4)], rep(0,4), p@pwm[,c(5,6)]);
colnames(mat1) <- c("-2", "-1", "0", "1", "2")
mat2 <- cbind(rep(0,6), rep(0,6),
c(0.5, 0.2, 0.2, 0.05, 0.05, 0),
rep(0,6), rep(0,6))
rownames(mat2) <- c("C>T", "C>A", "C>G",
"T>A", "T>C", "T>G")
table <- rbind(mat1, mat2)
logomaker(table,
cols= rev(RColorBrewer::brewer.pal(dim(table)[1],
name = "Spectral")),
frame_width = 1,
ic.scale = TRUE,
xlab = "Position",
ylab = "Information content")
logomaker(table,
cols= rev(RColorBrewer::brewer.pal(dim(table)[1],
name = "Spectral")),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE
xlab = "Position",
ylab = "Information content")
logomaker(table,
cols= rev(RColorBrewer::brewer.pal(dim(table)[1],
name = "Spectral")),
frame_width = 1,
ic.scale = TRUE,
yscale_change=FALSE,
xlab = "Position",
ylab = "Information content")
logomaker(table,
cols= rev(RColorBrewer::brewer.pal(dim(table)[1],
name = "Spectral")),
frame_width = 1,
ic.scale = TRUE,
yscale_change=TRUE,
xlab = "Position",
ylab = "Information content")
26/320
(1/16)*exp(-3/20)
1 - 0.25*exp(-0.5) - exp(-0.25)
13/160
17/320
library(devtools)
read.data1 = function() {
x = tempfile()
download.file('https://cdn.rawgit.com/kkdey/singleCellRNASeqMouseDeng2014/master/data/Deng2014MouseEsc.rda', destfile=x, quiet=TRUE)
z = get(load((x)))
return(z)
}
Deng2014MouseESC <- read.data1()
deng.counts <- Biobase::exprs(Deng2014MouseESC)
deng.meta_data <- Biobase::pData(Deng2014MouseESC)
deng.gene_names <- rownames(deng.counts)
gene_names <- get(load(file="../external_data/Deng_Data/TF_gene_names.rda"))
library(readxl)
guo_genes <- read_excel("../external_data/Deng_Data/guo48genes.xls")
guo_gene_names <- guo_genes$`Gene Symbol`
matched_indices <- match(guo_gene_names, deng.gene_names)
matched_indices <- matched_indices[!is.na(matched_indices)]
deng_counts_guo <- deng.counts[matched_indices,]
setwd("~/Documents/count-clustering/project/R")
library(readxl)
guo_genes <- read_excel("../external_data/Deng_Data/guo48genes.xls")
guo_gene_names <- guo_genes$`Gene Symbol`
matched_indices <- match(guo_gene_names, deng.gene_names)
matched_indices <- matched_indices[!is.na(matched_indices)]
deng_counts_guo <- deng.counts[matched_indices,]
dim(deng_counts_guo)
topic_clus <- maptpx::topics(t(deng_counts_guo), K=4, tol=0.1)
deng_counts_guo_blast <- deng.counts[matched_indices, grep("blast", deng.meta_data$cell_type)]
dim(deng_counts_guo_blast)
topic_clus_blast <- maptpx::topics(t(deng_counts_guo_blast), K=3, tol=0.1)
save(topic_clus_blast, "../rdas/deng_guo_blast_48_genes_k_3.rda")
save(topic_clus_blast, file="../rdas/deng_guo_blast_48_genes_k_3.rda")
topic_clus_blast <- maptpx::topics(t(deng_counts_guo_blast), K=4, tol=0.1)
save(topic_clus_blast, file="../rdas/deng_guo_blast_48_genes_k_4.rda")
dim(topic_clus_blast$omega)
topic_clus_blast$omega
topic_clus_blast$theta
library(seqLogo)
mFile <- system.file("Exfiles/pwm1", package="seqLogo")
m <- read.table(mFile)
p <- makePWM(m)
mat1 <- cbind(p@pwm[,c(3,4)], rep(0,4), p@pwm[,c(5,6)]);
colnames(mat1) <- c("-2", "-1", "0", "1", "2")
mat2 <- cbind(rep(0,6), rep(0,6),
c(0.5, 0.2, 0.2, 0.05, 0.05, 0),
rep(0,6), rep(0,6))
rownames(mat2) <- c("C>T", "C>A", "C>G",
"T>A", "T>C", "T>G")
mat2
table <- rbind(mat1, mat2)
table
table_mat_norm <-  apply(table, 2, function(x) return(x/sum(x)))
npos <- ncol(table_mat_norm)
chars <- as.character(rownames(table_mat_norm))
ic <- ic_computer(table_mat_norm)
ic
table_mat_norm
pwm2ic<-function(pwm) {
npos<-ncol(pwm)
ic<-numeric(length=npos)
for (i in 1:npos) {
ic[i]<- log(nrow(pwm), base=2) + sum(sapply(pwm[, i], function(x) {
if (x > 0) { x*log2(x) } else { 0 }
}))
}
ic
}
pwm2ic(table_mat_norm)
