% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_logo_heights_log.R
\name{get_logo_heights_log}
\alias{get_logo_heights_log}
\title{Get heights of logos in nlogomaker() using absolute log heights.}
\usage{
get_logo_heights_log(table, epsilon = 0.01, bg = NULL, alpha = 1,
  hist = FALSE, quant = 0.5, depletion_weight = 0.5)
}
\arguments{
\item{table}{The input table (data frame or matrix) of counts across different
logos or symbols (specified along the rows) ans across different sites or
positions or groups (specified along the columns).}

\item{epsilon}{An additive constant added to the PWM before scaling to eliminate
log (0) type errors.}

\item{bg}{The background probability, which defaults to NULL, in which case
equal probability is assigned to each symbol. The user can however specify a
vector (equal to in length to the number of symbols) which specifies the
background probability for each symbol and assumes this background probability
to be the same across the columns (sites), or a matrix, whose each cell specifies
the background probability of the symbols for each position.}

\item{alpha}{The Renyi entropy tuning parameter which is used in case of
scaling of the bar heights by information criterion. The default tuning
parameter value is 1, which corresponds to Shannon entropy.}

\item{hist}{Whether to use the hist method or the information criterion
method to determine the heights of the logos.}

\item{quant}{The quantile to be adjusted for in computing enrichment and
depletion scores. Defaults to 0.5, which corresponds to the median.}

\item{depletion_weight}{Weighing attached to ic based information score and the
log height based score. Defaults to 0.8}
}
\description{
Genertes total heights of the logos in the positive and negative
scales of the nlogomaker() logo plot along with the proportion of the height
distributed between the logos to be plotted in the positive and the negative
scales respectively.
}
\examples{

m = matrix(rep(0,48),4,12)
m[1,] = c(0,0,2.5,7,0,0,0,0,0,0,1,0)
m[2,] = c(4,6,3,1,0,0,0,0,0,5,0,5)
m[3,] = c(0,0,0,0,0,1,8,0,0,1,1,2)
m[4,] = c(4,2,2.5,0,8,7,0,8,8,2,6,1)
rownames(m) = c("A", "C", "G", "T")
colnames(m) = 1:12
m=m/8
get_logo_heights_log(m)

}
